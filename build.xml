<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License,
Version 2.0 (the "License"); you may not use this file except in
compliance with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<project name="pivot" default="build">
    <!-- Properties that affect the directories that are created as part of the build -->
    <property name="folder.src" value="src"/>
    <property name="folder.bin" value="ant-bin"/>
    <property name="folder.lib" value="lib"/>
    <property name="folder.dist" value="dist"/>
    <property name="folder.install" value="install"/>
    <property name="folder.deploy" value="deploy"/>
    <property name="folder.doc" value="doc"/>

    <!-- Keystore properties -->
    <property name="keystore.location" value="etc/pivot.keystore"/>
    <property name="keystore.alias" value="pivot"/>
    <property name="keystore.passwd" value="apache"/>

    <!-- Compiler properties -->
    <property name="compiler.optimize" value="true"/>
    <property name="compiler.deprecation" value="true"/>
    <property name="compiler.debug" value="false"/>
    <property name="compiler.target" value="1.5"/>
    <property name="compiler.encoding" value="UTF-8"/>

    <!-- Dynamic properties -->
    <tstamp/>
    <property file="build.properties"/>
    <property name="folder.release" value="apache-${ant.project.name}-${version}"/>

    <condition property="echo.jdk" value="Using JDK ${ant.java.version} (OK)"
        else="WARNING: Using JDK ${ant.java.version}">
        <equals arg1="${ant.java.version}" arg2="1.6"/>
    </condition>
    <echo message="${echo.jdk}"/>

    <target name="build" description="Compiles all packages"
        depends="charts, charts-test, core, core-test, web, web-test, wtk, wtk-test, tutorials, demos, tools"/>

    <target name="package"
        depends="charts-package, core-package, web-package, wtk-package, tutorials-package, demos-package, tools-package"/>

    <target name="clean" description="Removes all build artifacts"
        depends="charts-clean, core-clean, web-clean, web-test-clean, wtk-clean, tutorials-clean, demos-clean, tools-clean">
        <delete dir="${folder.dist}"/>
        <delete dir="${folder.deploy}"/>
        <delete dir="${folder.doc}"/>
        <delete dir="${folder.install}"/>
        <delete dir="${folder.lib}"/>
    </target>

    <!-- Javadoc -->
    <target name="doc" description="Generates API documentation in ${folder.doc}">
        <javadoc packagenames="pivot.*" destdir="${folder.doc}"
            author="true" version="true" use="true"
            classpath="${java.class.path}">
            <classpath>
                <fileset dir="charts/lib" includes="**/*.jar"/>
                <fileset dir="wtk/lib" includes="**/*.jar"/>
                <fileset dir="web/lib" includes="**/*.jar"/>
            </classpath>
            <packageset dir="charts/src" includes="**/*"/>
            <packageset dir="core/src" includes="**/*"/>
            <packageset dir="web/src" includes="**/*"/>
            <packageset dir="wtk/src" includes="**/*"/>
            <header>
              <![CDATA[
                 <script type="text/javascript">
                   var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
                   document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
                 </script>
                 <script type="text/javascript">
                   try {
                     var pageTracker = _gat._getTracker("UA-7977275-1");
                     pageTracker._trackPageview();
                   } catch(err) {}
                 </script>
              ]]>
            </header>
        </javadoc>
    </target>

    <!-- Charts -->
    <target name="charts" depends="core, wtk">
        <mkdir dir="charts/${folder.bin}"/>
        <javac srcdir="charts/src"
            destDir="charts/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="${compiler.target}"
            encoding="${compiler.encoding}"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <pathelement location="wtk/${folder.bin}"/>
                <fileset dir="charts/lib" includes="**/*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="charts-package" depends="charts">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-charts.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Vendor-Id" value="org.apache"/>
                <attribute name="Implementation-Vendor" value="The Apache Software Foundation"/>
                <attribute name="Implementation-Title" value="Apache Pivot Charts"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="charts/${folder.bin}"/>
            <fileset dir="charts/src">
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>
    </target>

    <target name="charts-clean">
        <delete dir="charts/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-charts.jar"/>
    </target>

    <!-- Charts Test -->
    <target name="charts-test" depends="charts, core, wtk">
        <mkdir dir="charts/${folder.bin}"/>
        <javac srcdir="charts/test"
            destDir="charts/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="${compiler.target}"
            encoding="${compiler.encoding}"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="charts/${folder.bin}"/>
                <pathelement location="core/${folder.bin}"/>
                <pathelement location="wtk/${folder.bin}"/>
            </classpath>
        </javac>
    </target>

    <!-- Core -->
    <target name="core">
        <mkdir dir="core/${folder.bin}"/>
        <javac srcdir="core/src"
            destDir="core/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="${compiler.target}"
            encoding="${compiler.encoding}"
            failonerror="true">
            <compilerarg value="-Xlint"/>
        </javac>
    </target>

    <target name="core-package" depends="core">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-core.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Vendor-Id" value="org.apache"/>
                <attribute name="Implementation-Vendor" value="The Apache Software Foundation"/>
                <attribute name="Implementation-Title" value="Apache Pivot Core"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="core/${folder.bin}"/>
            <fileset dir="core/src">
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>
    </target>

    <target name="core-clean">
        <delete dir="core/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-core.jar"/>
    </target>

    <!-- Core Test -->
    <target name="core-test" depends="core">
        <fail message="JUnit not found. Please see the BUILD file for more information.">
            <condition>
                <not>
                    <available classname="junit.framework.TestCase"/>
                </not>
            </condition>
        </fail>

        <mkdir dir="core/${folder.bin}"/>
        <javac srcdir="core/test"
            destDir="core/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="${compiler.target}"
            encoding="${compiler.encoding}"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
            </classpath>
        </javac>
    </target>

    <!-- Web -->
    <target name="web" depends="core">
        <mkdir dir="web/${folder.bin}"/>
        <javac srcdir="web/src"
            destDir="web/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="${compiler.target}"
            encoding="${compiler.encoding}"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <fileset dir="web/lib" includes="**/*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="web-package" depends="web">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-web.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Vendor-Id" value="org.apache"/>
                <attribute name="Implementation-Vendor" value="The Apache Software Foundation"/>
                <attribute name="Implementation-Title" value="Apache Pivot Web Queries"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="web/${folder.bin}" excludes="pivot/web/server/**"/>
            <fileset dir="web/src">
                <exclude name="pivot/web/server/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>

        <jar jarfile="${folder.lib}/${ant.project.name}-web.server.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Vendor-Id" value="org.apache"/>
                <attribute name="Implementation-Vendor" value="The Apache Software Foundation"/>
                <attribute name="Implementation-Title" value="Apache Pivot Web Queries Server"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="web/${folder.bin}" includes="pivot/web/server/*"/>
            <fileset dir="web/src">
                <include name="pivot/web/server/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>
    </target>

    <target name="web-clean">
        <delete dir="web/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-web.jar"/>
        <delete file="${folder.lib}/${ant.project.name}-web.server.jar"/>
    </target>

    <!-- Web Test -->
    <target name="web-test" depends="core, web, wtk">
        <mkdir dir="web/${folder.bin}"/>
        <javac srcdir="web/test"
            destDir="web/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="${compiler.target}"
            encoding="${compiler.encoding}"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <pathelement location="web/${folder.bin}"/>
                <pathelement location="wtk/${folder.bin}"/>
                <fileset dir="web/lib" includes="**/*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="web-test-war" depends="core-package, web-package, wtk-package, web-test">
        <jar jarfile="web/www/lib/${ant.project.name}-web.test.jar">
            <fileset dir="web/${folder.bin}" includes="pivot/web/test/**" excludes="pivot/web/test/server/**"/>
            <fileset dir="web/test">
                <exclude name="pivot/web/test/server/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>

        <copy todir="web/www/lib">
            <fileset dir="${folder.lib}">
                <include name="${ant.project.name}-core.jar"/>
                <include name="${ant.project.name}-web.jar"/>
                <include name="${ant.project.name}-wtk.jar"/>
                <include name="${ant.project.name}-wtk.terra.jar"/>
            </fileset>
            <fileset dir="wtk/lib" includes="*.jar"/>
        </copy>

        <war destfile="${folder.lib}/${ant.project.name}_web_test.war" webxml="web/web.xml">
            <fileset dir="web/www"/>
            <classes dir="web/${folder.bin}">
                <include name="pivot/web/test/server/**"/>
            </classes>
            <classes dir="web/test">
                <include name="pivot/web/test/server/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </classes>
            <lib dir="${folder.lib}">
                <include name="${ant.project.name}-core.jar"/>
                <include name="${ant.project.name}-web.server.jar"/>
            </lib>
        </war>
    </target>

    <target name="web-test-clean">
        <delete dir="web/www/lib" includes="*.jar"/>
        <delete dir="web/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}_web_test.war"/>
    </target>

    <!-- WTK -->
    <target name="wtk" depends="core">
        <fail message="LiveConnect not found. Please see the BUILD file for more information.">
            <condition>
                <not>
                    <available classname="netscape.javascript.JSObject">
                        <classpath>
                            <fileset dir="${java.home}/lib" includes="**/*.jar"/>
                        </classpath>
                    </available>
                </not>
            </condition>
        </fail>

        <mkdir dir="wtk/${folder.bin}"/>
        <javac srcdir="wtk/src"
            destDir="wtk/${folder.bin}"
            includejavaruntime="true"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="${compiler.target}"
            encoding="${compiler.encoding}"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <fileset dir="wtk/lib" includes="**/*.jar"/>
                <fileset dir="${java.home}/lib" includes="**/*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="wtk-package" depends="wtk">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-wtk.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Vendor-Id" value="org.apache"/>
                <attribute name="Implementation-Vendor" value="The Apache Software Foundation"/>
                <attribute name="Implementation-Title" value="Apache Pivot WTK"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="wtk/${folder.bin}">
                <exclude name="pivot/wtk/skin/terra/**"/>
                <exclude name="pivot/wtk/skin/obsidian/**"/>
            </fileset>
            <fileset dir="wtk/src">
                <exclude name="pivot/wtk/skin/terra/**"/>
                <exclude name="pivot/wtk/skin/obsidian/**"/>
                <exclude name="META-INF/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>

        <jar jarfile="${folder.lib}/${ant.project.name}-wtk.terra.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Vendor-Id" value="org.apache"/>
                <attribute name="Implementation-Vendor" value="The Apache Software Foundation"/>
                <attribute name="Implementation-Title" value="Apache Pivot WTK Terra Theme"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="wtk/${folder.bin}" includes="pivot/wtk/skin/terra/**"/>
            <fileset dir="wtk/src">
                <include name="pivot/wtk/skin/terra/**"/>
                <include name="META-INF/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>

        <jar jarfile="${folder.lib}/${ant.project.name}-wtk.obsidian.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Vendor-Id" value="org.apache"/>
                <attribute name="Implementation-Vendor" value="The Apache Software Foundation"/>
                <attribute name="Implementation-Title" value="Apache Pivot WTK Obsidian Theme"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="wtk/${folder.bin}" includes="pivot/wtk/skin/obsidian/**"/>
            <fileset dir="wtk/src">
                <include name="pivot/wtk/skin/obsidian/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>
    </target>

    <target name="wtk-clean">
        <delete dir="wtk/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-wtk.jar"/>
        <delete file="${folder.lib}/${ant.project.name}-wtk.terra.jar"/>
        <delete file="${folder.lib}/${ant.project.name}-wtk.obsidian.jar"/>
    </target>

    <!-- WTK Test -->
    <target name="wtk-test" depends="core, wtk">
        <mkdir dir="wtk/${folder.bin}"/>
        <javac srcdir="wtk/test"
            destDir="wtk/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="${compiler.target}"
            encoding="${compiler.encoding}"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <pathelement location="wtk/${folder.bin}"/>
            </classpath>
        </javac>
    </target>

    <!-- Tutorials -->
    <target name="tutorials" depends="core, wtk, web, charts">
        <mkdir dir="tutorials/${folder.bin}"/>
        <javac srcdir="tutorials/src"
            destDir="tutorials/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="${compiler.target}"
            encoding="${compiler.encoding}"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <pathelement location="web/${folder.bin}"/>
                <pathelement location="wtk/${folder.bin}"/>
            </classpath>
        </javac>
    </target>

    <target name="tutorials-package" depends="tutorials">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-tutorials.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Vendor-Id" value="org.apache"/>
                <attribute name="Implementation-Vendor" value="The Apache Software Foundation"/>
                <attribute name="Implementation-Title" value="Apache Pivot Tutorials"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="tutorials/${folder.bin}" excludes="pivot/tutorials/stocktracker/**"/>
            <fileset dir="tutorials/src">
                <exclude name="**/*.java"/>
                <exclude name="pivot/tutorials/stocktracker/**"/>
            </fileset>
        </jar>

        <jar jarfile="${folder.lib}/${ant.project.name}-stocktracker.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Vendor-Id" value="org.apache"/>
                <attribute name="Implementation-Vendor" value="The Apache Software Foundation"/>
                <attribute name="Implementation-Title" value="Apache Pivot Stock Tracker Demo"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="tutorials/${folder.bin}" includes="pivot/tutorials/stocktracker/*"/>
            <fileset dir="tutorials/src">
                <exclude name="**/*.java"/>
            </fileset>
        </jar>
    </target>

    <target name="tutorials-clean">
        <delete dir="tutorials/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-tutorials.jar"/>
        <delete file="${folder.lib}/${ant.project.name}-stocktracker.jar"/>
    </target>

    <!-- Demos -->
    <target name="demos">
        <mkdir dir="demos/${folder.bin}"/>
        <javac srcdir="demos/src"
            destDir="demos/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="${compiler.target}"
            encoding="${compiler.encoding}"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <pathelement location="web/${folder.bin}"/>
                <pathelement location="wtk/${folder.bin}"/>
                <fileset dir="demos/lib" includes="**/*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="demos-package" depends="build">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-demos.jar">
            <fileset dir="demos/${folder.bin}"/>
            <fileset dir="demos/src">
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>
    </target>

    <target name="demos-clean">
        <delete dir="demos/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-demos.jar"/>
    </target>

    <!-- Tools -->
    <target name="tools" depends="core, wtk, web">
        <mkdir dir="tools/${folder.bin}"/>
        <javac srcdir="tools/src"
            destDir="tools/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="${compiler.target}"
            encoding="${compiler.encoding}"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <pathelement location="web/${folder.bin}"/>
                <pathelement location="wtk/${folder.bin}"/>
            </classpath>
        </javac>
    </target>

    <target name="tools-package" depends="tools">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-tools.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Vendor-Id" value="org.apache"/>
                <attribute name="Implementation-Vendor" value="The Apache Software Foundation"/>
                <attribute name="Implementation-Title" value="Apache Pivot Tools"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="tools/${folder.bin}"/>
            <fileset dir="tools/src">
                <exclude name="**/*.java"/>
            </fileset>
        </jar>
    </target>

    <target name="tools-clean">
        <delete dir="tools/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-tools.jar"/>
    </target>

    <!-- Package source distribution -->
    <target name="dist" description="Generates source release in ${folder.dist}"
        depends="trim-whitespace">
        <mkdir dir="${folder.dist}/${folder.release}-src"/>

        <!-- Copy the source files to the release folder -->
        <copy todir="${folder.dist}/${folder.release}-src">
            <fileset dir=".">
                <include name="**/*"/>

                <!-- Exclude hidden files and folders -->
                <exclude name="**/.*/**"/>

                <!-- Exclude folders containing compilation artifacts -->
                <exclude name="**/${folder.bin}/**"/>
                <exclude name="${folder.dist}/**"/>
                <exclude name="${folder.doc}/**"/>
                <exclude name="${folder.install}/**"/>
                <exclude name="${folder.lib}/**"/>
            </fileset>
        </copy>

        <!-- Create .zip archive -->
        <zip destfile="${folder.dist}/${folder.release}-src.zip" level="9">
            <fileset dir="${folder.dist}" includes="${folder.release}-src/**"/>
        </zip>
        <checksum file="${folder.dist}/${folder.release}-src.zip" algorithm="md5"/>
        <checksum file="${folder.dist}/${folder.release}-src.zip" algorithm="sha"/>

        <!-- Create .tar.gz archive -->
        <tar destfile="${folder.dist}/${folder.release}-src.tar" longfile="gnu">
            <fileset dir="${folder.dist}" includes="${folder.release}-src/**"/>
        </tar>
        <gzip src="${folder.dist}/${folder.release}-src.tar" destfile="${folder.dist}/${folder.release}-src.tar.gz"/>
        <delete file="${folder.dist}/${folder.release}-src.tar"/>
        <checksum file="${folder.dist}/${folder.release}-src.tar.gz" algorithm="md5"/>
        <checksum file="${folder.dist}/${folder.release}-src.tar.gz" algorithm="sha"/>
    </target>

    <!-- Package binary distribution -->
    <target name="install" description="Generates binary release in ${folder.install}"
        depends="clean, package, doc">
        <mkdir dir="${folder.install}/${folder.release}/${folder.doc}"/>
        <mkdir dir="${folder.install}/${folder.release}/${folder.lib}"/>

        <!-- Copy base files to the install folder -->
        <copy todir="${folder.install}/${folder.release}">
            <fileset dir=".">
                <include name="DISCLAIMER"/>
                <include name="LICENSE"/>
                <include name="NOTICE"/>
                <include name="README"/>
                <include name="RELEASE-NOTES"/>
            </fileset>
        </copy>

        <!-- Copy release binaries -->
        <copy file="${folder.lib}/${ant.project.name}-charts.jar"
            tofile="${folder.install}/${folder.release}/${folder.lib}/${ant.project.name}-charts-incubating.jar"/>
        <copy file="${folder.lib}/${ant.project.name}-core.jar"
            tofile="${folder.install}/${folder.release}/${folder.lib}/${ant.project.name}-core-incubating.jar"/>
        <copy file="${folder.lib}/${ant.project.name}-web.jar"
            tofile="${folder.install}/${folder.release}/${folder.lib}/${ant.project.name}-web-incubating.jar"/>
        <copy file="${folder.lib}/${ant.project.name}-web.server.jar"
            tofile="${folder.install}/${folder.release}/${folder.lib}/${ant.project.name}-web-incubating.server.jar"/>
        <copy file="${folder.lib}/${ant.project.name}-wtk.jar"
            tofile="${folder.install}/${folder.release}/${folder.lib}/${ant.project.name}-wtk-incubating.jar"/>
        <copy file="${folder.lib}/${ant.project.name}-wtk.terra.jar"
            tofile="${folder.install}/${folder.release}/${folder.lib}/${ant.project.name}-wtk-incubating.terra.jar"/>
        <copy file="${folder.lib}/${ant.project.name}-tools.jar"
            tofile="${folder.install}/${folder.release}/${folder.lib}/${ant.project.name}-tools-incubating.jar"/>

        <!-- Copy documentation -->
        <copy todir="${folder.install}/${folder.release}/${folder.doc}">
            <fileset dir="${folder.doc}"/>
        </copy>

        <!-- Create .zip archive -->
        <zip destfile="${folder.install}/${folder.release}.zip" level="9">
            <fileset dir="${folder.install}" includes="${folder.release}/**"/>
        </zip>
        <checksum file="${folder.install}/${folder.release}.zip" algorithm="md5"/>
        <checksum file="${folder.install}/${folder.release}.zip" algorithm="sha"/>

        <!-- Create .tar.gz archive -->
        <tar destfile="${folder.install}/${folder.release}.tar" longfile="gnu">
            <fileset dir="${folder.install}" includes="${folder.release}/**"/>
        </tar>
        <gzip src="${folder.install}/${folder.release}.tar" destfile="${folder.install}/${folder.release}.tar.gz"/>
        <delete file="${folder.install}/${folder.release}.tar"/>
        <checksum file="${folder.install}/${folder.release}.tar.gz" algorithm="md5"/>
        <checksum file="${folder.install}/${folder.release}.tar.gz" algorithm="sha"/>
    </target>

    <!-- Generate deployment files for online tutorials -->
    <target name="deploy"
        depends="package">
        <mkdir dir="${folder.deploy}"/>

        <!-- Copy JARs to deployment directory -->
        <copy todir="${folder.deploy}">
            <fileset dir="${folder.lib}" includes="*.jar" excludes="*.server.jar"/>
            <fileset dir="charts/lib" includes="*.jar"/>
            <fileset dir="demos/lib" includes="*.jar"/>
            <fileset dir="wtk/lib" includes="*.jar"/>
        </copy>

        <!-- Sign JARS -->
        <mkdir dir="${folder.deploy}/signed"/>
        <copy todir="${folder.deploy}/signed">
            <fileset dir="${folder.deploy}" includes="*.jar" />
        </copy>

        <signjar keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"
            preservelastmodified="true" lazy="true">
            <path>
                <fileset dir="${folder.deploy}/signed" includes="*.jar" />
            </path>
        </signjar>

        <!-- Rename signed JARs to *.signed.jar and copy to deployment directory -->
        <copy todir="${folder.deploy}">
            <fileset dir="${folder.deploy}/signed" includes="*.jar" />
            <mapper type="glob" from="*.jar" to="*.signed.jar"/>
        </copy>

        <!-- Clean up -->
        <delete dir="${folder.deploy}/signed"/>
    </target>

    <!-- Remove trailing white space in all source files -->
    <target name="trim-whitespace">
        <replaceregexp match="[\t ]+$" replace="" flags="gm" byline="true">
            <fileset dir=".">
                <include name="**/*.java"/>
                <include name="**/*.html"/>
                <include name="**/*.txt"/>
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
                <include name="**/*.wtkx"/>
                <include name="**/*.json"/>
            </fileset>
        </replaceregexp>
    </target>
</project>
