<?xml version="1.0" encoding="UTF-8"?>
<project name="pivot" default="build">
    <!-- Properties that affect the directories that are created as part of the build -->
    <property name="folder.src" value="src"/>
    <property name="folder.bin" value="ant-bin"/>
    <property name="folder.lib" value="lib"/>
    <property name="folder.dist" value="dist"/>
    <property name="folder.deploy" value="deploy"/>
    <property name="folder.doc" value="doc"/>

    <!-- Keystore properties -->
    <property name="keystore.location" value="etc/pivot.keystore"/>
    <property name="keystore.alias" value="pivot"/>
    <property name="keystore.passwd" value="apache"/>

    <!-- Compiler properties -->
    <property name="compiler.optimize" value="true"/>
    <property name="compiler.deprecation" value="true"/>
    <property name="compiler.debug" value="false"/>

    <!-- Dynamic properties -->
    <tstamp/>
    <property file="build.properties"/>

    <target name="build" description="Compiles all packages"
        depends="charts, charts-test, core, core-test, web, web-test, wtk, wtk-test, demos, tutorials, tools"/>

    <target name="package"
        depends="charts-package, charts-test-package, core-package, core-test-package, web-package, web-test-package, wtk-package, wtk-test-package, demos-package, tutorials-package, tools-package"/>

    <target name="clean" description="Removes all build artifacts"
        depends="charts-clean, charts-test-clean, core-clean, core-test-clean, web-clean, web-test-clean, wtk-clean, wtk-test-clean, demos-clean, tutorials-clean, tools-clean">
        <delete dir="${folder.dist}"/>
        <delete dir="${folder.deploy}"/>
        <delete dir="${folder.doc}"/>
        <delete dir="${folder.lib}"/>
    </target>

    <!-- Javadoc -->
    <target name="doc" description="Generates API documentation for all packages">
        <javadoc packagenames="pivot.*" destdir="${folder.doc}" author="true" version="true" use="true">
            <classpath>
                <fileset dir="charts/lib" includes="**/*.jar"/>
                <fileset dir="wtk/lib" includes="**/*.jar"/>
                <fileset dir="web/lib" includes="**/*.jar"/>
            </classpath>
            <packageset dir="charts/src" includes="**/*"/>
            <packageset dir="core/src" includes="**/*"/>
            <packageset dir="web/src" includes="**/*"/>
            <packageset dir="wtk/src" includes="**/*"/>
            <header>
              <![CDATA[
                 <script type="text/javascript">
                   var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
                   document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
                 </script>
                 <script type="text/javascript">
                   try {
                     var pageTracker = _gat._getTracker("UA-7977275-1");
                     pageTracker._trackPageview();
                   } catch(err) {}
                 </script>
              ]]>
            </header>
        </javadoc>
    </target>

    <!-- Charts -->
    <target name="charts" depends="core, wtk">
        <mkdir dir="charts/${folder.bin}"/>
        <javac srcdir="charts/src"
            destDir="charts/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="1.5"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <pathelement location="wtk/${folder.bin}"/>
                <fileset dir="charts/lib" includes="**.*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="charts-package" depends="charts">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-charts.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="charts/${folder.bin}">
                <exclude name="**/pivot/charts/skin/**"/>
            </fileset>

            <fileset dir="charts/src">
                <exclude name="**/pivot/charts/skin/**"/>
                <exclude name="**/META-INF/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>

        <jar jarfile="${folder.lib}/${ant.project.name}-charts.jfree.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="charts/${folder.bin}">
                <include name="**/pivot/charts/skin/**"/>
            </fileset>
            <fileset dir="charts/src">
                <include name="**/pivot/charts/skin/**"/>
                <include name="**/META-INF/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>
    </target>

    <target name="charts-clean">
        <delete dir="charts/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-charts.jar"/>
    </target>

    <!-- Charts Test -->
    <target name="charts-test" depends="charts, core, wtk">
        <mkdir dir="charts-test/${folder.bin}"/>
        <javac srcdir="charts-test/src"
            destDir="charts-test/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="1.5"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="charts/${folder.bin}"/>
                <pathelement location="core/${folder.bin}"/>
                <pathelement location="wtk/${folder.bin}"/>
            </classpath>
        </javac>
    </target>

    <target name="charts-test-package" depends="charts-test">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-charts.test.jar">
            <fileset dir="charts-test/${folder.bin}"/>
            <fileset dir="charts-test/src">
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>
    </target>

    <target name="charts-test-clean">
        <delete dir="charts-test/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-charts.test.jar"/>
    </target>

    <!-- Core -->
    <target name="core">
        <mkdir dir="core/${folder.bin}"/>
        <javac srcdir="core/src"
            destDir="core/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="1.5"
            failonerror="true">
            <compilerarg value="-Xlint"/>
        </javac>
    </target>

    <target name="core-package" depends="core">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-core.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="core/${folder.bin}"/>
            <fileset dir="core/src">
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>
    </target>

    <target name="core-clean">
        <delete dir="core/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-core.jar"/>
    </target>

    <!-- Core Test -->
    <target name="core-test" depends="core">
        <mkdir dir="core-test/${folder.bin}"/>
        <javac srcdir="core-test/src"
            destDir="core-test/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="1.5"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <pathelement location="junit.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="core-test-package" depends="core-test">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-core.test.jar">
            <fileset dir="core-test/${folder.bin}"/>
            <fileset dir="core-test/src">
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>
    </target>

    <target name="core-test-clean">
        <delete dir="core-test/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-core.test.jar"/>
    </target>

    <!-- Web -->
    <target name="web" depends="core">
        <mkdir dir="web/${folder.bin}"/>
        <javac srcdir="web/src"
            destDir="web/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="1.5"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <fileset dir="web/lib" includes="**/*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="web-package" depends="web">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-web.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="web/${folder.bin}" excludes="pivot/web/server/**"/>
            <fileset dir="web/src">
                <exclude name="pivot/web/server/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>

        <jar jarfile="${folder.lib}/${ant.project.name}-web.server.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="web/${folder.bin}" includes="pivot/web/server/*"/>
            <fileset dir="web/src">
                <include name="pivot/web/server/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>
    </target>

    <target name="web-clean">
        <delete dir="web/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-web.jar"/>
        <delete file="${folder.lib}/${ant.project.name}-web.server.jar"/>
    </target>

    <!-- Web Test -->
    <target name="web-test" depends="core, web, wtk">
        <mkdir dir="web-test/${folder.bin}"/>
        <javac srcdir="web-test/src"
            destDir="web-test/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="1.5"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <pathelement location="web/${folder.bin}"/>
                <pathelement location="wtk/${folder.bin}"/>
                <fileset dir="web/lib" includes="**/*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="web-test-package" depends="web-test">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-web.test.jar">
            <fileset dir="web-test/${folder.bin}" excludes="pivot/web/test/server/**"/>
            <fileset dir="web-test/src">
                <exclude name="pivot/web/test/server/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>
    </target>

    <target name="web-test-war" depends="core-package, web-package, wtk-package, web-test-package">
        <copy todir="web-test/www/lib">
            <fileset dir="${folder.lib}">
                <include name="${ant.project.name}-core.jar"/>
                <include name="${ant.project.name}-web.jar"/>
                <include name="${ant.project.name}-wtk.jar"/>
                <include name="${ant.project.name}-wtk.terra.jar"/>
                <include name="${ant.project.name}-web.test.jar"/>
            </fileset>
            <fileset dir="wtk/lib" includes="*.jar"/>
        </copy>

        <mkdir dir="web-test/lib"/>
        <copy todir="web-test/lib">
            <fileset dir="${folder.lib}">
                <include name="${ant.project.name}-core.jar"/>
                <include name="${ant.project.name}-web.server.jar"/>
            </fileset>
        </copy>

        <war destfile="${folder.lib}/${ant.project.name}_web_test.war" webxml="web-test/web.xml">
            <fileset dir="web-test/www"/>
            <classes dir="web-test/${folder.bin}">
                <include name="pivot/web/test/server/**"/>
            </classes>
            <classes dir="web-test/src">
                <include name="pivot/web/test/server/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </classes>
            <lib dir="web-test/lib"/>
        </war>
    </target>

    <target name="web-test-clean">
        <delete dir="web-test/www/lib" includes="*.jar"/>
        <delete dir="web-test/${folder.bin}"/>
        <delete dir="web-test/lib"/>
        <delete file="${folder.lib}/${ant.project.name}-web.test.jar"/>
        <delete file="${folder.lib}/${ant.project.name}_web_test.war"/>
    </target>

    <!-- WTK -->
    <target name="wtk" depends="core">
        <mkdir dir="wtk/${folder.bin}"/>
        <javac srcdir="wtk/src"
            destDir="wtk/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="1.5"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <fileset dir="wtk/lib" includes="**/*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="wtk-package" depends="wtk">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-wtk.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="wtk/${folder.bin}">
                <exclude name="pivot/wtk/skin/terra/**"/>
                <exclude name="pivot/wtk/skin/obsidian/**"/>
            </fileset>
            <fileset dir="wtk/src">
                <exclude name="pivot/wtk/skin/terra/**"/>
                <exclude name="pivot/wtk/skin/obsidian/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>

        <jar jarfile="${folder.lib}/${ant.project.name}-wtk.terra.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="wtk/${folder.bin}" includes="pivot/wtk/skin/terra/**"/>
            <fileset dir="wtk/src">
                <include name="pivot/wtk/skin/terra/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>

        <jar jarfile="${folder.lib}/${ant.project.name}-wtk.obsidian.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="wtk/${folder.bin}" includes="pivot/wtk/skin/obsidian/**"/>
            <fileset dir="wtk/src">
                <include name="pivot/wtk/skin/obsidian/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>
    </target>

    <target name="wtk-clean">
        <delete dir="wtk/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-wtk.jar"/>
        <delete file="${folder.lib}/${ant.project.name}-wtk.terra.jar"/>
        <delete file="${folder.lib}/${ant.project.name}-wtk.obsidian.jar"/>
    </target>

    <!-- WTK Test -->
    <target name="wtk-test" depends="core, wtk">
        <mkdir dir="wtk-test/${folder.bin}"/>
        <javac srcdir="wtk-test/src"
            destDir="wtk-test/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="1.5"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <pathelement location="wtk/${folder.bin}"/>
            </classpath>
        </javac>
    </target>

    <target name="wtk-test-package" depends="wtk-test">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-wtk.test.jar">
            <fileset dir="wtk-test/${folder.bin}"/>
            <fileset dir="wtk-test/src">
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>
    </target>

    <target name="wtk-test-clean">
        <delete dir="wtk-test/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-wtk.test.jar"/>
    </target>

    <!-- Demos -->
    <target name="demos" depends="core, web, wtk">
        <mkdir dir="demos/${folder.bin}"/>
        <javac srcdir="demos/src"
            destDir="demos/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="1.5"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <pathelement location="web/${folder.bin}"/>
                <pathelement location="wtk/${folder.bin}"/>
                <fileset dir="demos/lib" includes="**/*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="demos-package" depends="demos">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-demos.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="demos/${folder.bin}"/>
            <fileset dir="demos/src">
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </jar>
    </target>

    <target name="demos-clean">
        <delete dir="demos/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-demos.jar"/>
    </target>

    <!-- Tutorials -->
    <target name="tutorials" depends="core, wtk, web, charts">
        <mkdir dir="tutorials/${folder.bin}"/>
        <javac srcdir="tutorials/src"
            destDir="tutorials/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="1.5"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <pathelement location="web/${folder.bin}"/>
                <pathelement location="wtk/${folder.bin}"/>
            </classpath>
        </javac>
    </target>

    <target name="tutorials-package" depends="tutorials">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-tutorials.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="tutorials/${folder.bin}" excludes="pivot/tutorials/stocktracker/**"/>
            <fileset dir="tutorials/src">
                <exclude name="**/*.java"/>
                <exclude name="pivot/tutorials/stocktracker/**"/>
            </fileset>
        </jar>

        <jar jarfile="${folder.lib}/${ant.project.name}-stocktracker.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="tutorials/${folder.bin}" includes="pivot/tutorials/stocktracker/*"/>
            <fileset dir="tutorials/src">
                <exclude name="**/*.java"/>
            </fileset>
        </jar>
    </target>

    <target name="tutorials-clean">
        <delete dir="tutorials/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-tutorials.jar"/>
        <delete file="${folder.lib}/${ant.project.name}-stocktracker.jar"/>
    </target>

    <!-- Tools -->
    <target name="tools" depends="core, wtk, web">
        <mkdir dir="tools/${folder.bin}"/>
        <javac srcdir="tools/src"
            destDir="tools/${folder.bin}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            debug="${compiler.debug}"
            target="1.5"
            failonerror="true">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement location="core/${folder.bin}"/>
                <pathelement location="web/${folder.bin}"/>
                <pathelement location="wtk/${folder.bin}"/>
            </classpath>
        </javac>
    </target>

    <target name="tools-package" depends="tools">
        <mkdir dir="${folder.lib}"/>
        <jar jarfile="${folder.lib}/${ant.project.name}-tools.jar">
            <manifest>
                <attribute name="Sealed" value="true"/>
                <attribute name="Built-On" value="${DSTAMP}-${TSTAMP}"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
            <fileset dir="tools/${folder.bin}"/>
            <fileset dir="tools/src">
                <exclude name="**/*.java"/>
            </fileset>
        </jar>
    </target>

    <target name="tools-clean">
        <delete dir="tools/${folder.bin}"/>
        <delete file="${folder.lib}/${ant.project.name}-tools.jar"/>
    </target>

    <!-- Package all binaries and source -->
    <target name="dist" description="Generates release artifacts"
        depends="trim-whitespace, clean, package, doc">
        <property name="folder.release" value="apache-${ant.project.name}-${version}-incubating"/>

        <mkdir dir="${folder.dist}/${folder.release}/${folder.doc}"/>
        <mkdir dir="${folder.dist}/${folder.release}/${folder.lib}"/>
        <mkdir dir="${folder.dist}/${folder.release}/${folder.src}"/>

        <!-- Construct the release hierarchy -->
        <copy todir="${folder.dist}/${folder.release}">
            <fileset dir=".">
                <include name="BUILD"/>
                <include name="DISCLAIMER"/>
                <include name="LICENSE"/>
                <include name="NOTICE"/>
                <include name="README"/>
                <include name="RELEASE-NOTES"/>
            </fileset>
        </copy>

        <!-- Copy lib -->
        <copy file="${folder.lib}/${ant.project.name}-charts.jar"
            tofile="${folder.dist}/${folder.release}/${folder.lib}/${ant.project.name}-charts-incubating.jar"/>
        <copy file="${folder.lib}/${ant.project.name}-core.jar"
            tofile="${folder.dist}/${folder.release}/${folder.lib}/${ant.project.name}-core-incubating.jar"/>
        <copy file="${folder.lib}/${ant.project.name}-web.jar"
            tofile="${folder.dist}/${folder.release}/${folder.lib}/${ant.project.name}-web-incubating.jar"/>
        <copy file="${folder.lib}/${ant.project.name}-web.server.jar"
            tofile="${folder.dist}/${folder.release}/${folder.lib}/${ant.project.name}-web-incubating.server.jar"/>
        <copy file="${folder.lib}/${ant.project.name}-wtk.jar"
            tofile="${folder.dist}/${folder.release}/${folder.lib}/${ant.project.name}-wtk-incubating.jar"/>
        <copy file="${folder.lib}/${ant.project.name}-wtk.terra.jar"
            tofile="${folder.dist}/${folder.release}/${folder.lib}/${ant.project.name}-wtk-incubating.terra.jar"/>
        <copy file="${folder.lib}/${ant.project.name}-tools.jar"
            tofile="${folder.dist}/${folder.release}/${folder.lib}/${ant.project.name}-tools-incubating.jar"/>

        <!-- Copy doc -->
        <copy todir="${folder.dist}/${folder.release}/${folder.doc}">
            <fileset dir="${folder.doc}"/>
        </copy>

        <!-- Copy src -->
        <copy todir="${folder.dist}/${folder.release}/${folder.src}">
            <fileset dir=".">
                <include name="build.*"/>
                <include name="*.jar"/>
                <include name="*/src/**"/>
                <include name="*/lib/**"/>
                <exclude name=".*"/>

                <!-- Exclude specific demos -->
                <exclude name="charts/src/pivot/charts/skin/**"/>
                <exclude name="charts/src/META-INF/**"/>
                <exclude name="charts/lib/jfreechart*.jar"/>
                <exclude name="charts/lib/jcommon*.jar"/>
                <exclude name="demos/src/pivot/demos/amf/**"/>
                <exclude name="demos/lib/flex*.jar"/>
                <exclude name="demos/src/pivot/demos/google/**"/>
                <exclude name="demos/lib/gdata*.jar"/>
            </fileset>
        </copy>

        <!-- Create the .zip archive -->
        <zip destfile="${folder.dist}/${folder.release}.zip" level="9">
            <fileset dir="${folder.dist}" includes="${folder.release}/**"/>
        </zip>
        <checksum file="${folder.dist}/${folder.release}.zip" algorithm="md5"/>
        <checksum file="${folder.dist}/${folder.release}.zip" algorithm="sha"/>

        <!-- Create the .tar.gz archive -->
        <tar destfile="${folder.dist}/${folder.release}.tar" longfile="gnu">
            <fileset dir="${folder.dist}" includes="${folder.release}/**"/>
        </tar>
        <gzip src="${folder.dist}/${folder.release}.tar" destfile="${folder.dist}/${folder.release}.tar.gz"/>
        <delete file="${folder.dist}/${folder.release}.tar"/>
        <checksum file="${folder.dist}/${folder.release}.tar.gz" algorithm="md5"/>
        <checksum file="${folder.dist}/${folder.release}.tar.gz" algorithm="sha"/>
    </target>

    <!-- Generate deployment files for online demos and tutorials -->
    <target name="deploy" description="Generates deployment files for online demos and tutorials"
        depends="package">
        <delete dir="${folder.deploy}"/>
        <mkdir dir="${folder.deploy}"/>

        <!-- Platform -->
        <copy file="${folder.lib}/${ant.project.name}-charts.jar" todir="${folder.deploy}"/>
        <signjar jar="${folder.deploy}/${ant.project.name}-charts.jar" signedjar="${folder.deploy}/${ant.project.name}-charts.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>

        <copy file="${folder.lib}/${ant.project.name}-charts.jfree.jar" todir="${folder.deploy}"/>
        <signjar jar="${folder.deploy}/${ant.project.name}-charts.jfree.jar" signedjar="${folder.deploy}/${ant.project.name}-charts.jfree.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>

        <copy file="${folder.lib}/${ant.project.name}-core.jar" todir="${folder.deploy}"/>
        <signjar jar="${folder.deploy}/${ant.project.name}-core.jar" signedjar="${folder.deploy}/${ant.project.name}-core.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>

        <copy file="${folder.lib}/${ant.project.name}-web.jar" todir="${folder.deploy}"/>
        <signjar jar="${folder.deploy}/${ant.project.name}-web.jar" signedjar="${folder.deploy}/${ant.project.name}-web.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>

        <copy file="${folder.lib}/${ant.project.name}-wtk.jar" todir="${folder.deploy}"/>
        <signjar jar="${folder.deploy}/${ant.project.name}-wtk.jar" signedjar="${folder.deploy}/${ant.project.name}-wtk.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>

        <copy file="${folder.lib}/${ant.project.name}-wtk.terra.jar" todir="${folder.deploy}"/>
        <signjar jar="${folder.deploy}/${ant.project.name}-wtk.terra.jar" signedjar="${folder.deploy}/${ant.project.name}-wtk.terra.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>

        <!-- StAX -->
        <copy file="wtk/lib/stax-api-1.0.jar" todir="${folder.deploy}"/>
        <signjar jar="${folder.deploy}/stax-api-1.0.jar" signedjar="${folder.deploy}/stax-api-1.0.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>

        <copy file="wtk/lib/stax-1.2.0.jar" todir="${folder.deploy}"/>
        <signjar jar="${folder.deploy}/stax-1.2.0.jar" signedjar="${folder.deploy}/stax-1.2.0.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>

        <!-- JFree -->
        <copy file="charts/lib/jcommon-1.0.12.jar" todir="${folder.deploy}"/>
        <signjar jar="${folder.deploy}/jcommon-1.0.12.jar" signedjar="${folder.deploy}/jcommon-1.0.12.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>

        <copy file="charts/lib/jfreechart-1.0.9.jar" todir="${folder.deploy}"/>
        <signjar jar="${folder.deploy}/jfreechart-1.0.9.jar" signedjar="${folder.deploy}/jfreechart-1.0.9.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>

        <!-- Google Data -->
        <signjar jar="demos/lib/gdata-base-1.0.jar" signedjar="${folder.deploy}/gdata-base-1.0.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>
        <signjar jar="demos/lib/gdata-client-1.0.jar" signedjar="${folder.deploy}/gdata-client-1.0.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>
        <signjar jar="demos/lib/gdata-client-meta-1.0.jar" signedjar="${folder.deploy}/gdata-client-meta-1.0.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>
        <signjar jar="demos/lib/gdata-contacts-1.0.jar" signedjar="${folder.deploy}/gdata-contacts-1.0.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>
        <signjar jar="demos/lib/gdata-contacts-meta-1.0.jar" signedjar="${folder.deploy}/gdata-contacts-meta-1.0.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>
        <signjar jar="demos/lib/gdata-core-1.0.jar" signedjar="${folder.deploy}/gdata-core-1.0.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>
        <signjar jar="demos/lib/gdata-media-1.0.jar" signedjar="${folder.deploy}/gdata-media-1.0.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>

        <!-- Smack -->
        <signjar jar="demos/lib/smack.jar" signedjar="${folder.deploy}/smack.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>
        <signjar jar="demos/lib/smackx.jar" signedjar="${folder.deploy}/smackx.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>

        <!-- Demos -->
        <copy file="${folder.lib}/${ant.project.name}-charts.test.jar" todir="${folder.deploy}"/>
        <copy file="${folder.lib}/${ant.project.name}-demos.jar" todir="${folder.deploy}"/>
        <copy file="demos/src/pivot/demos/dom/dom_test.html" todir="${folder.deploy}"/>
        <copy file="demos/src/pivot/demos/dom/im_client.html" todir="${folder.deploy}"/>
        <signjar jar="${folder.deploy}/${ant.project.name}-demos.jar" signedjar="${folder.deploy}/${ant.project.name}-demos.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>

        <!-- Tutorials -->
        <copy file="${folder.lib}/${ant.project.name}-tutorials.jar" todir="${folder.deploy}"/>
        <signjar jar="${folder.deploy}/${ant.project.name}-tutorials.jar" signedjar="${folder.deploy}/${ant.project.name}-tutorials.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>
        <copy file="${folder.lib}/${ant.project.name}-stocktracker.jar" todir="${folder.deploy}"/>
        <signjar jar="${folder.deploy}/${ant.project.name}-stocktracker.jar" signedjar="${folder.deploy}/${ant.project.name}-stocktracker.signed.jar"
            keystore="${keystore.location}" storepass="${keystore.passwd}" alias="${keystore.alias}"/>
    </target>

    <!-- Remove trailing white space in all source files -->
    <target name="trim-whitespace">
        <replaceregexp match="[\t ]+$" replace="" flags="gm" byline="true">
            <fileset dir=".">
                <include name="**/*.java"/>
                <include name="**/*.html"/>
                <include name="**/*.txt"/>
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
                <include name="**/*.wtkx"/>
                <include name="**/*.json"/>
            </fileset>
        </replaceregexp>
    </target>
</project>
