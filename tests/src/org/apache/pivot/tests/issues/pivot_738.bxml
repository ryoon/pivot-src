<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License,
Version 2.0 (the "License"); you may not use this file except in
compliance with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<Window title="Pivot-738" maximized="true"
    xmlns:bxml="http://pivot.apache.org/bxml"
    xmlns:content="org.apache.pivot.wtk.content"
    xmlns="org.apache.pivot.wtk"
    minimumHeight="200"
    minimumWidth="300"
    maximumHeight="250"
    maximumWidth="400"
>

    <bxml:script>
    <![CDATA[
    importPackage(java.lang);  // required to use System.out and System.err

    System.out.println("BXML Scripts successfully initialized");
    ]]>
    </bxml:script>

    <ScrollPane horizontalScrollBarPolicy="fill_to_capacity" verticalScrollBarPolicy="fill_to_capacity">
        <Border preferredHeight="220">
            <ScrollPane verticalScrollBarPolicy="always" repaintAllViewport="true">
                <TableView bxml:id="listTable">
                    <columns>
                        <TableView.Column name="i" width="80"/>
                        <TableView.Column name="a" width="-1"/>
                    </columns>

                    <componentListeners>
                        <![CDATA[
                        importClass(org.apache.pivot.collections.ArrayList);
                        importClass(org.apache.pivot.collections.HashMap);

                        var numRows = 100;

                        function parentChanged(component, previousParent) {
                            if (component.getParent() != null) {
                                var tableData = new ArrayList();

                                for (var i = 0; i < numRows; i++) {
                                    var row = new HashMap();
                                    row.put("i", new String(i));
                                    row.put("a", new String(Math.floor(Math.random() * numRows)));
                                    tableData.add(row);
                                }

                                component.setTableData(tableData);
                            }
                        }
                        ]]>
                    </componentListeners>

                </TableView>
                <columnHeader>
                    <TableViewHeader bxml:id="listHeader" tableView="$listTable"/>
                </columnHeader>
            </ScrollPane>
        </Border>
    </ScrollPane>

</Window>
