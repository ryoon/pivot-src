<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License,
Version 2.0 (the "License"); you may not use this file except in
compliance with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<document id="calendars">
    <properties>
        <title>Calendars</title>
    </properties>

    <body>
        <p>
            Pivot supports two types of calendar components: a standalone <tt>Calendar</tt>
            component that can be used anywhere within an application's user interface, and a
            <tt>CalendarButton</tt> component that, like a <a href="lists.html">list button</a>,
            displays a popup calendar when pressed.
        </p>

        <p>
            The following sample application demonstrates both component types:
        </p>

        <application class="org.apache.pivot.tutorials.calendars.Calendars"
            width="300" height="400">
            <libraries>
                <library>core</library>
                <library>wtk</library>
                <library>wtk-terra</library>
                <library>tutorials</library>
            </libraries>
        </application>

        <p>
            The WTKX source is as follows:
        </p>

        <source type="xml" location="org/apache/pivot/tutorials/calendars/calendars.wtkx">
            <![CDATA[
            <Window title="Calendars" maximized="true"
                xmlns:wtkx="http://pivot.apache.org/wtkx"
                xmlns="org.apache.pivot.wtk">
                <content>
                    <Border styles="{padding:8}">
                        <content>
                            <Form styles="{rightAlignLabels:true}">
                                <sections>
                                    <Form.Section>
                                        <Border Form.label="Calendar" styles="{color:10}">
                                            <content>
                                                <Calendar wtkx:id="calendar"/>
                                            </content>
                                        </Border>
                                        <CalendarButton wtkx:id="calendarButton" Form.label="Calendar button"/>
                                    </Form.Section>
                                    <Form.Section>
                                        <Label wtkx:id="selectedDateLabel" Form.label="Selected date"/>
                                    </Form.Section>
                                </sections>
                            </Form>
                        </content>
                    </Border>
                </content>
            </Window>
            ]]>
        </source>

        <p>
            The Java source is as follows. It simply registers event handlers that keep the
            selection state of the <tt>Calendar</tt> and <tt>CalendarButton</tt> in sync:
        </p>

        <source type="java" location="org/apache/pivot/tutorials/calendars/Calendars.java">
            <![CDATA[
            package org.apache.pivot.tutorials.calendars;

            import org.apache.pivot.collections.Map;
            import org.apache.pivot.util.CalendarDate;
            import org.apache.pivot.wtk.Application;
            import org.apache.pivot.wtk.Calendar;
            import org.apache.pivot.wtk.CalendarButton;
            import org.apache.pivot.wtk.CalendarButtonSelectionListener;
            import org.apache.pivot.wtk.CalendarSelectionListener;
            import org.apache.pivot.wtk.DesktopApplicationContext;
            import org.apache.pivot.wtk.Display;
            import org.apache.pivot.wtk.Label;
            import org.apache.pivot.wtk.Window;
            import org.apache.pivot.wtkx.WTKXSerializer;

            public class Calendars implements Application {
                private Window window = null;
                private Calendar calendar = null;
                private CalendarButton calendarButton = null;
                private Label selectedDateLabel = null;

                private boolean updatingSelectedDate = false;

                @Override
                public void startup(Display display, Map<String, String> properties)
                    throws Exception {
                    WTKXSerializer wtkxSerializer = new WTKXSerializer();
                    window = (Window)wtkxSerializer.readObject(this, "calendars.wtkx");
                    calendar = (Calendar)wtkxSerializer.get("calendar");
                    calendarButton = (CalendarButton)wtkxSerializer.get("calendarButton");
                    selectedDateLabel = (Label)wtkxSerializer.get("selectedDateLabel");

                    calendar.getCalendarSelectionListeners().add(new CalendarSelectionListener() {
                        @Override
                        public void selectedDateChanged(Calendar calendar, CalendarDate previousSelectedDate) {
                            updateSelectedDate(calendar.getSelectedDate());
                        }
                    });

                    calendarButton.getCalendarButtonSelectionListeners().add(new CalendarButtonSelectionListener() {
                        @Override
                        public void selectedDateChanged(CalendarButton calendarButton, CalendarDate previousSelectedDate) {
                            updateSelectedDate(calendarButton.getSelectedDate());
                        }
                    });

                    window.open(display);
                }

                @Override
                public boolean shutdown(boolean optional) {
                    if (window != null) {
                        window.close();
                    }

                    return false;
                }

                @Override
                public void suspend() {
                }

                @Override
                public void resume() {
                }

                private void updateSelectedDate(CalendarDate selectedDate) {
                    if (!updatingSelectedDate) {
                        updatingSelectedDate = true;

                        calendar.setSelectedDate(selectedDate);
                        calendar.setYear(selectedDate.year);
                        calendar.setMonth(selectedDate.month);

                        calendarButton.setSelectedDate(selectedDate);

                        selectedDateLabel.setText(selectedDate.toString());

                        updatingSelectedDate = false;
                    }
                }

                public static void main(String[] args) {
                    DesktopApplicationContext.main(Calendars.class, args);
                }
            }
            ]]>
        </source>
    </body>
</document>
