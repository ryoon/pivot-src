<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License,
Version 2.0 (the "License"); you may not use this file except in
compliance with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<document id="radio-buttons">
    <properties>
        <title>Radio Buttons</title>
    </properties>

    <body>
        <p>
            The following example demonstrates how to use the <tt>RadioButton</tt> class in a
            Pivot application:
        </p>

        <application class="org.apache.pivot.tutorials.buttons.RadioButtons"
            width="480" height="360">
            <libraries>
                <library>core</library>
                <library>wtk</library>
                <library>wtk-terra</library>
                <library>tutorials</library>
            </libraries>
        </application>

        <p>
            The WTKX source for the example is below:
        </p>

        <source type="xml" location="org/apache/pivot/tutorials/buttons/push_buttons.wtkx">
            <![CDATA[
            <Window title="Radio Buttons" maximized="true"
                xmlns:wtkx="http://pivot.apache.org/wtkx"
                xmlns="org.apache.pivot.wtk">
                <content>
                    <BoxPane orientation="vertical" styles="{padding:4}">
                        <wtkx:define>
                            <ButtonGroup wtkx:id="numbers"/>
                        </wtkx:define>
                        <RadioButton wtkx:id="oneButton" buttonData="One" buttonGroup="$numbers" selected="true"/>
                        <RadioButton wtkx:id="twoButton" buttonData="Two" buttonGroup="$numbers"/>
                        <RadioButton wtkx:id="threeButton" buttonData="Three" buttonGroup="$numbers"/>
                        <PushButton wtkx:id="selectButton" buttonData="Select"/>
                    </BoxPane>
                </content>
            </Window>
            ]]>
        </source>

        <p>
            The following is the Java source for the example. Like the push button example, the
            application registers an event listener that is called when the button is pressed.
            It also gets a reference to a button group named <tt>numbersGroup</tt>
            (<tt>numbersGroup</tt> is defined as a final local variable so the handler method will
            have access to it). When called, the handler gets a reference to the currently selected
            button from the button group and displays an alert containing the data of the selected
            button.
        </p>

        <source type="java" location="org/apache/pivot/tutorials/buttons/PushButtons.java">
            <![CDATA[
            package org.apache.pivot.tutorials.buttons;

            import org.apache.pivot.collections.Map;
            import org.apache.pivot.wtk.Alert;
            import org.apache.pivot.wtk.Application;
            import org.apache.pivot.wtk.Button;
            import org.apache.pivot.wtk.ButtonGroup;
            import org.apache.pivot.wtk.ButtonPressListener;
            import org.apache.pivot.wtk.DesktopApplicationContext;
            import org.apache.pivot.wtk.Display;
            import org.apache.pivot.wtk.MessageType;
            import org.apache.pivot.wtk.PushButton;
            import org.apache.pivot.wtk.Window;
            import org.apache.pivot.wtkx.WTKXSerializer;

            public class RadioButtons implements Application {
                private Window window = null;
                private PushButton selectButton = null;

                @Override
                public void startup(Display display, Map<String, String> properties)
                    throws Exception {
                    WTKXSerializer wtkxSerializer = new WTKXSerializer();
                    window = (Window)wtkxSerializer.readObject(this, "radio_buttons.wtkx");
                    selectButton = (PushButton)wtkxSerializer.get("selectButton");

                    // Get a reference to the button group
                    final ButtonGroup numbersGroup = (ButtonGroup)wtkxSerializer.get("numbers");

                    // Add a button press listener
                    selectButton.getButtonPressListeners().add(new ButtonPressListener() {
                        @Override
                        public void buttonPressed(Button button) {
                            String message = "You selected \""
                                + numbersGroup.getSelection().getButtonData()
                                + "\".";
                            Alert.alert(MessageType.INFO, message, window);
                        }
                    });

                    window.open(display);
                }

                @Override
                public boolean shutdown(boolean optional) {
                    if (window != null) {
                        window.close();
                    }

                    return false;
                }

                @Override
                public void suspend() {
                }

                @Override
                public void resume() {
                }

                public static void main(String[] args) {
                    DesktopApplicationContext.main(RadioButtons.class, args);
                }
            }
            ]]>
        </source>
    </body>
</document>
