<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License,
Version 2.0 (the "License"); you may not use this file except in
compliance with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<document id="stock-tracker.ui">
    <properties>
        <title>UI Markup Using WTKX</title>
    </properties>

    <body>
        <p>
            The user interface of a Pivot application is often defined using an XML markup language
            called WTKX (the "WTK" in WTKX stands for "windowing toolkit" and is taken from the
            name of the Pivot package that contains most of the user interface elements,
            <tt>org.apache.pivot.wtk</tt>; the "X" comes from "XML"). WTKX is effectively a
            shorthand for instantiating and configuring Java class instances. Though it can
            actually be used to declaratively construct any type of Java object hierarchy, it is
            most often used to define the structure of an application's user interface - the
            hierarchical structure of an XML document closely parallels the structure of the
            application's component hierarchy, which makes it easy to visualize the resulting
            output.
        </p>

        <h2>StockTrackerWindow</h2>

        <p>
            The following is a snippet of code taken from <tt>stock_tracker_window.wtkx</tt>,
            the WTKX file that defines the main window of the Stock Tracker application:
        </p>

        <source type="xml">
            <![CDATA[
            <stocktracker:StockTrackerWindow title="%stockTracker" maximized="true"
                xmlns:wtkx="http://pivot.apache.org/wtkx"
                xmlns:content="org.apache.pivot.wtk.content"
                xmlns:stocktracker="org.apache.pivot.tutorials.stocktracker"
                xmlns="org.apache.pivot.wtk">
                <content>
                    <TablePane styles="{padding:8, horizontalSpacing:6, verticalSpacing:6}">
                        <columns>
                            <TablePane.Column width="1*" />
                        </columns>

                        <rows>
                            ...

                            <TablePane.Row height="1*">
                                <SplitPane splitRatio="0.4">
                                    <left>
                                        ...
                                    </left>
                                    <right>
                                        <Border styles="{padding:6, color:10}">
                                            <content>
                                                <wtkx:include wtkx:id="detailPane" src="detail_pane.wtkx"/>
                                            </content>
                                        </Border>
                                    </right>
                                </SplitPane>
                            </TablePane.Row>

                            <TablePane.Row height="-1">
                                <BoxPane styles="{horizontalAlignment:'left', verticalAlignment:'center'}">
                                    <Label text="%symbol" styles="{font:{bold:true}}" />
                                    <TextInput wtkx:id="symbolTextInput" textSize="10"
                                        maximumLength="8" />
                                        ...
                        </rows>
                    </TablePane>
                </content>
            </stocktracker:StockTrackerWindow>
            ]]>
        </source>

        <p>
            In general, XML elements in WTKX refer either to class instances or properties of class
            instances. Any element that begins with a capital letter represents a class instance,
            and elements beginning with lowercase letters represent properties. The exception is
            elements that use the "wtkx" namespace prefix, which represent processing directives to
            the WTKX serializer. Similarly, XML attributes generally represent properties, with the
            exception of attributes that begin with a "wtkx" prefix, which contain processing
            information used by the serializer.
        </p>

        <p>
            The root node of the <tt>stock_tracker_window.wtkx</tt> file is a
            <tt>stocktracker:StockTrackerWindow</tt> element. This element corresponds to an
            instance of <tt>org.apache.pivot.tutorials.stocktracker.StockTrackerWindow</tt>. In
            WTKX, XML namespaces are used to associate a class element with a Java package. In this
            case, "stocktracker" is mapped to <tt>org.apache.pivot.tutorials.stocktracker</tt>, and
            "content" is mapped to <tt>org.apache.pivot.wtk.content</tt>; the default namespace is
            mapped to <tt>org.apache.pivot.wtk</tt>, the Java package that contains most of Pivot's
            common components.
        </p>

        <p>
            <tt>StockTrackerWindow</tt> is an application-specific class that extends the base
            <tt>org.apache.pivot.wtk.Window</tt> class. Windows are the primary entry point into a
            Pivot user interface. Windows are always direct descendants of the "display" (an
            instance of <tt>org.apache.pivot.wtk.Display</tt> that is created by the platform). An
            application can open any number of windows on the display, though many applications
            will use a single primary window and a number of secondary windows (for example,
            dialogs, sheets, menu popups, or tooltips).
        </p>

        <p>
            Note that <tt>StockTrackerWindow</tt> implements the <tt>org.apache.pivot.wtkx.Bindable</tt>
            interface. This interface allows developers to easily map elements declared with a
            <tt>wtkx:id</tt> attribute to Java member variables. For example,
            <tt>StockTrackerWindow</tt> declares the following member variables:
        </p>

        <source type="xml">
            <![CDATA[
            @WTKX private TextInput symbolTextInput = null;
            @WTKX private Button addSymbolButton = null;
            @WTKX private Button removeSymbolsButton = null;
            @WTKX private BoxPane detailPane = null;
            @WTKX private Label lastUpdateLabel = null;
            @WTKX private Button yahooFinanceButton = null;
            ]]>
        </source>

        <p>
            Because <tt>StockTrackerWindow</tt> implements <tt>Bindable</tt>, these member variables
            are automatically populated with the corresponding values declared in the WTKX file.
            <tt>Bindable</tt> defines a single method, <tt>initialize()</tt>, that is called when
            the root element has been fully loaded and the bound values have been processed. This
            allows the bound class to perform any required initialization (generally event
            registration, discussed in more detail in the
            <a href="stock-tracker.events.html">Event Handling</a> section).
        </p>

        <p>
            The WTKX snippet above also illustrates a couple other key aspects of WTKX markup:
            resource resolution and includes. Resource resolution allows a developer to insert
            "tags" in the markup that will be replaced at load time with a localized equivalent.
            This makes it very easy to build internationalized applications in Pivot. Any attribute
            value that begins with a "%" character is considered a resource key, and the value
            for the attribute is obtained from a resource bundle associated with the WTKX file.
            This is discussed in more detail in the
            <a href="stock-tracker.localization.html">Localization</a> section.
        </p>

        <p>
            WTKX also supports two other resolution operators: "@" and "$". The "at" symbol is used
            to resolve URLs; any attribute value preceded by an "at" symbol is converted to an
            instance of <tt>java.net.URL</tt> relative to the current WTKX file. This notation is
            very useful for loading images from a location relative to the current file.
        </p>

        <p>
            The dollar sign is a "variable dereference" operator. Though it isn't shown in this
            example, it is possible to embed script code in a WTKX file using the
            <tt>&lt;wtkx:script&gt;</tt> tag. Any JVM-capable scripting language is supported,
            including JavaScript, Groovy, and Scala, among others. Any attribute value preceded by
            a dollar sign is resolved to an instance of a script variable declared within the page.
            This allows developers to define variables in script and then easily use them as
            initialization paramters for class instances declared as elements. Script code can
            also refer to any page elements identified via a <tt>wtkx:id</tt> attribute as globally
            scoped page level variables.
        </p>

        <p>
            Includes allow a developer to embed content defined in an external WTKX file as if it
            was defined in the source file itself. This is useful for partitioning content into
            manageable pieces (for example, when working on large applications or with multiple
            developers, or when defining reusable content templates). The detail pane in the
            Stock Tracker application is defined in an include, <tt>detail_pane.wtkx</tt>. This file
            is included into the main window via the <tt>&lt;wtkx:include&gt;</tt> tag.
        </p>
    </body>
</document>
